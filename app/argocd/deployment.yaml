# Service Account for Argo CD
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-server
  namespace: argocd

---
# ClusterRole for Argo CD
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argocd-server
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]

---
# ClusterRoleBinding for Argo CD
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-server
subjects:
  - kind: ServiceAccount
    name: argocd-server
    namespace: argocd

---
# Redis Deployment for Argo CD
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-redis
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-redis
    spec:
      containers:
        - name: redis
          image: redis:7.0-alpine
          ports:
            - containerPort: 6379

---
# Redis Service for Argo CD
apiVersion: v1
kind: Service
metadata:
  name: argocd-redis
  namespace: argocd
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app.kubernetes.io/name: argocd-redis

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: argocd-data
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 20Gi
  hostPath:
    path: /data/argo 
---
# Persistent Volume Claim for Argo CD
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: argocd-data
  namespace: argocd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
# Argo CD Server Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-server
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-server
    spec:
      serviceAccountName: argocd-server
      containers:
        - name: argocd-server
          image: quay.io/argoproj/argocd:v2.5.0
          imagePullPolicy: IfNotPresent
          command:
            - argocd-server
          args:
            - --rootpath=/argo
            - --basehref=/argo
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8081
              name: https
          env:
            - name: ARGOCD_API_SERVER
              value: "http://argocd-server.argocd.svc.cluster.local:80"
            - name: ARGOCD_REDIS_SERVER
              value: "argocd-redis.argocd.svc.cluster.local:6379"
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - mountPath: /var/lib/argocd
              name: argocd-data
      volumes:
        - name: argocd-data
          persistentVolumeClaim:
            claimName: argocd-data

---
# Service for Argo CD Server
apiVersion: v1
kind: Service
metadata:
  name: argocd-server
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-server
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
    - name: https
      port: 443
      targetPort: 8081
  selector:
    app.kubernetes.io/name: argocd-server

---
# Ingress Resource for Argo CD
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-ingress
  namespace: argocd
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - http:
        paths:
          - path: /argo(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: argocd-server
                port:
                  number: 80